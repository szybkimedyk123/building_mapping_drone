<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1037</width>
    <height>949</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QWidget" name="widget" native="true">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>600</width>
     <height>800</height>
    </rect>
   </property>
   <widget class="QLabel" name="background">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>600</width>
      <height>800</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">border-radius:20px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="logo">
    <property name="geometry">
     <rect>
      <x>110</x>
      <y>50</y>
      <width>381</width>
      <height>101</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true"/>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QPushButton" name="close_opt_butt">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>680</y>
      <width>231</width>
      <height>75</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:rgba(0, 0, 0, 0);
border:2px solid rgba(0, 50, 255, 0.8);
color:rgba(255, 255, 255, 230);
padding-bottom:7px;
border-radius:5px;
font-size: 30px;
</string>
    </property>
    <property name="text">
     <string>Close</string>
    </property>
   </widget>
   <widget class="QPushButton" name="apply_butt">
    <property name="geometry">
     <rect>
      <x>310</x>
      <y>680</y>
      <width>231</width>
      <height>75</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:rgba(0, 0, 0, 0);
border:2px solid rgba(0, 50, 255, 0.8);
color:rgba(255, 255, 255, 230);
padding-bottom:7px;
border-radius:5px;
font-size: 30px;

</string>
    </property>
    <property name="text">
     <string>Apply</string>
    </property>
   </widget>
   <widget class="QPushButton" name="options_1_butt">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>170</y>
      <width>481</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:rgba(0, 0, 0, 0);
border:2px solid rgba(0, 50, 255, 0.8);
color:rgba(255, 255, 255, 230);
padding-bottom:7px;
border-radius:5px;
font-size: 25px;
</string>
    </property>
    <property name="text">
     <string>Creating dense point cloud</string>
    </property>
   </widget>
   <widget class="QPushButton" name="options_2_butt">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>410</y>
      <width>481</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:rgba(0, 0, 0, 0);
border:2px solid rgba(0, 50, 255, 0.8);
color:rgba(255, 255, 255, 230);
padding-bottom:7px;
border-radius:5px;
font-size: 25px;
</string>
    </property>
    <property name="text">
     <string>Meshing</string>
    </property>
   </widget>
   <widget class="QSlider" name="options_1_max_res_slid">
    <property name="geometry">
     <rect>
      <x>320</x>
      <y>230</y>
      <width>211</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider::groove:horizontal {
        border: 1px solid #999999;
        height: 10px; /* Specify the height of the groove */
        background: #000079;
        margin: 2px 0;
        border-radius: 5px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal {
        background: #0032FF; /* Set handle color */
        border: 1px solid #999999;
        width: 20px; /* Set width of the handle */
        height: 20px; /* Set height of the handle */
        margin: -5px 0; /* Position the handle properly */
        border-radius: 10px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal:hover {
        background: #0063FF; /* Change handle color on hover */
    }</string>
    </property>
    <property name="minimum">
     <number>640</number>
    </property>
    <property name="maximum">
     <number>2560</number>
    </property>
    <property name="singleStep">
     <number>192</number>
    </property>
    <property name="pageStep">
     <number>192</number>
    </property>
    <property name="value">
     <number>800</number>
    </property>
    <property name="sliderPosition">
     <number>800</number>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
    <property name="invertedAppearance">
     <bool>false</bool>
    </property>
    <property name="invertedControls">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QPushButton" name="options_1_max_res_butt">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>230</y>
      <width>241</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:rgba(0, 0, 0, 0);
border:2px solid rgba(0, 0, 0, 0);
color:rgba(255, 255, 255, 230);
padding-bottom:3px;
border-radius:5px;
font-size: 20px;
</string>
    </property>
    <property name="text">
     <string>Max resolution: 800</string>
    </property>
   </widget>
   <widget class="QSlider" name="options_1_est_roi_slid">
    <property name="geometry">
     <rect>
      <x>320</x>
      <y>270</y>
      <width>211</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider::groove:horizontal {
        border: 1px solid #999999;
        height: 10px; /* Specify the height of the groove */
        background: #000079;
        margin: 2px 0;
        border-radius: 5px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal {
        background: #0032FF; /* Set handle color */
        border: 1px solid #999999;
        width: 20px; /* Set width of the handle */
        height: 20px; /* Set height of the handle */
        margin: -5px 0; /* Position the handle properly */
        border-radius: 10px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal:hover {
        background: #0063FF; /* Change handle color on hover */
    }</string>
    </property>
    <property name="minimum">
     <number>0</number>
    </property>
    <property name="maximum">
     <number>2</number>
    </property>
    <property name="singleStep">
     <number>1</number>
    </property>
    <property name="pageStep">
     <number>1</number>
    </property>
    <property name="value">
     <number>1</number>
    </property>
    <property name="sliderPosition">
     <number>1</number>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
    <property name="invertedAppearance">
     <bool>false</bool>
    </property>
    <property name="invertedControls">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QPushButton" name="options_1_est_roi_butt">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>270</y>
      <width>241</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:rgba(0, 0, 0, 0);
border:2px solid rgba(0, 0, 0, 0);
color:rgba(255, 255, 255, 230);
padding-bottom:3px;
border-radius:5px;
font-size: 20px;
</string>
    </property>
    <property name="text">
     <string>Estimate roi: 1</string>
    </property>
   </widget>
   <widget class="QPushButton" name="options_1_verb_butt">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>310</y>
      <width>241</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:rgba(0, 0, 0, 0);
border:2px solid rgba(0, 0, 0, 0);
color:rgba(255, 255, 255, 230);
padding-bottom:3px;
border-radius:5px;
font-size: 20px;
</string>
    </property>
    <property name="text">
     <string>Verbosity: 2</string>
    </property>
   </widget>
   <widget class="QSlider" name="options_1_verb_slid">
    <property name="geometry">
     <rect>
      <x>320</x>
      <y>310</y>
      <width>211</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider::groove:horizontal {
        border: 1px solid #999999;
        height: 10px; /* Specify the height of the groove */
        background: #000079;
        margin: 2px 0;
        border-radius: 5px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal {
        background: #0032FF; /* Set handle color */
        border: 1px solid #999999;
        width: 20px; /* Set width of the handle */
        height: 20px; /* Set height of the handle */
        margin: -5px 0; /* Position the handle properly */
        border-radius: 10px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal:hover {
        background: #0063FF; /* Change handle color on hover */
    }</string>
    </property>
    <property name="minimum">
     <number>0</number>
    </property>
    <property name="maximum">
     <number>4</number>
    </property>
    <property name="singleStep">
     <number>1</number>
    </property>
    <property name="pageStep">
     <number>1</number>
    </property>
    <property name="value">
     <number>2</number>
    </property>
    <property name="sliderPosition">
     <number>2</number>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
    <property name="invertedAppearance">
     <bool>false</bool>
    </property>
    <property name="invertedControls">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QPushButton" name="options_2_decim_butt">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>510</y>
      <width>241</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:rgba(0, 0, 0, 0);
border:2px solid rgba(0, 0, 0, 0);
color:rgba(255, 255, 255, 230);
padding-bottom:3px;
border-radius:5px;
font-size: 20px;
</string>
    </property>
    <property name="text">
     <string>Decimate mesh: 1.0</string>
    </property>
   </widget>
   <widget class="QSlider" name="options_2_decim_slid">
    <property name="geometry">
     <rect>
      <x>320</x>
      <y>510</y>
      <width>211</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider::groove:horizontal {
        border: 1px solid #999999;
        height: 10px; /* Specify the height of the groove */
        background: #000079;
        margin: 2px 0;
        border-radius: 5px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal {
        background: #0032FF; /* Set handle color */
        border: 1px solid #999999;
        width: 20px; /* Set width of the handle */
        height: 20px; /* Set height of the handle */
        margin: -5px 0; /* Position the handle properly */
        border-radius: 10px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal:hover {
        background: #0063FF; /* Change handle color on hover */
    }</string>
    </property>
    <property name="minimum">
     <number>1</number>
    </property>
    <property name="maximum">
     <number>10</number>
    </property>
    <property name="singleStep">
     <number>1</number>
    </property>
    <property name="pageStep">
     <number>1</number>
    </property>
    <property name="value">
     <number>10</number>
    </property>
    <property name="sliderPosition">
     <number>10</number>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
    <property name="invertedAppearance">
     <bool>false</bool>
    </property>
    <property name="invertedControls">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QWidget" name="widget_2" native="true">
    <property name="geometry">
     <rect>
      <x>50</x>
      <y>340</y>
      <width>431</width>
      <height>51</height>
     </rect>
    </property>
    <widget class="QRadioButton" name="options_1_rem_dmaps_rad">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>10</y>
       <width>377</width>
       <height>31</height>
      </rect>
     </property>
     <property name="layoutDirection">
      <enum>Qt::RightToLeft</enum>
     </property>
     <property name="autoFillBackground">
      <bool>false</bool>
     </property>
     <property name="styleSheet">
      <string notr="true">	QRadioButton {
       color:rgba(255, 255, 255, 230);
		font-size: 20px;
		spacing: 140px;
    }    
	QRadioButton::indicator {
        width: 17px; /* Set width of the indicator */
        height: 17px; /* Set height of the indicator */
    }

    QRadioButton::indicator::unchecked {
        border: 2px solid #999999; /* Set border for the unchecked state */
        border-radius: 10px; /* Set border radius to make it rounded */
    }

    QRadioButton::indicator::checked {
        background: #0063F9; /* Set background color for the checked state */
        border: 2px solid #32CC99; /* Set border for the checked state */
        border-radius: 10px; /* Set border radius to make it rounded */
    }</string>
     </property>
     <property name="text">
      <string>Remove depth-maps</string>
     </property>
    </widget>
   </widget>
   <widget class="QWidget" name="widget_3" native="true">
    <property name="geometry">
     <rect>
      <x>50</x>
      <y>460</y>
      <width>431</width>
      <height>51</height>
     </rect>
    </property>
    <widget class="QRadioButton" name="options_2_integrate_roi_rad">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>10</y>
       <width>377</width>
       <height>31</height>
      </rect>
     </property>
     <property name="layoutDirection">
      <enum>Qt::RightToLeft</enum>
     </property>
     <property name="autoFillBackground">
      <bool>false</bool>
     </property>
     <property name="styleSheet">
      <string notr="true">	QRadioButton {
       color:rgba(255, 255, 255, 230);
		font-size: 20px;
		spacing: 150px;
    }    
	QRadioButton::indicator {
        width: 17px; /* Set width of the indicator */
        height: 17px; /* Set height of the indicator */
    }

    QRadioButton::indicator::unchecked {
        border: 2px solid #999999; /* Set border for the unchecked state */
        border-radius: 10px; /* Set border radius to make it rounded */
    }

    QRadioButton::indicator::checked {
        background: #0063F9; /* Set background color for the checked state */
        border: 2px solid #32CC99; /* Set border for the checked state */
        border-radius: 10px; /* Set border radius to make it rounded */
    }</string>
     </property>
     <property name="text">
      <string>Integrate only ROI</string>
     </property>
    </widget>
   </widget>
   <widget class="QPushButton" name="options_2_smot_iter_butt">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>550</y>
      <width>241</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:rgba(0, 0, 0, 0);
border:2px solid rgba(0, 0, 0, 0);
color:rgba(255, 255, 255, 230);
padding-bottom:3px;
border-radius:5px;
font-size: 20px;
</string>
    </property>
    <property name="text">
     <string>Smoothing iterations: 2</string>
    </property>
   </widget>
   <widget class="QSlider" name="options_2_smot_iter_slid">
    <property name="geometry">
     <rect>
      <x>320</x>
      <y>550</y>
      <width>211</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider::groove:horizontal {
        border: 1px solid #999999;
        height: 10px; /* Specify the height of the groove */
        background: #000079;
        margin: 2px 0;
        border-radius: 5px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal {
        background: #0032FF; /* Set handle color */
        border: 1px solid #999999;
        width: 20px; /* Set width of the handle */
        height: 20px; /* Set height of the handle */
        margin: -5px 0; /* Position the handle properly */
        border-radius: 10px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal:hover {
        background: #0063FF; /* Change handle color on hover */
    }</string>
    </property>
    <property name="minimum">
     <number>1</number>
    </property>
    <property name="maximum">
     <number>8</number>
    </property>
    <property name="singleStep">
     <number>1</number>
    </property>
    <property name="pageStep">
     <number>1</number>
    </property>
    <property name="value">
     <number>2</number>
    </property>
    <property name="sliderPosition">
     <number>2</number>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
    <property name="invertedAppearance">
     <bool>false</bool>
    </property>
    <property name="invertedControls">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QPushButton" name="options_2_min_dis_butt">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>590</y>
      <width>241</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:rgba(0, 0, 0, 0);
border:2px solid rgba(0, 0, 0, 0);
color:rgba(255, 255, 255, 230);
padding-bottom:3px;
border-radius:5px;
font-size: 20px;
</string>
    </property>
    <property name="text">
     <string>Minimal point distance: 3</string>
    </property>
   </widget>
   <widget class="QSlider" name="options_2_min_dis_slid">
    <property name="geometry">
     <rect>
      <x>320</x>
      <y>590</y>
      <width>211</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider::groove:horizontal {
        border: 1px solid #999999;
        height: 10px; /* Specify the height of the groove */
        background: #000079;
        margin: 2px 0;
        border-radius: 5px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal {
        background: #0032FF; /* Set handle color */
        border: 1px solid #999999;
        width: 20px; /* Set width of the handle */
        height: 20px; /* Set height of the handle */
        margin: -5px 0; /* Position the handle properly */
        border-radius: 10px; /* Set border radius to make it rounded */
    }

    QSlider::handle:horizontal:hover {
        background: #0063FF; /* Change handle color on hover */
    }</string>
    </property>
    <property name="minimum">
     <number>0</number>
    </property>
    <property name="maximum">
     <number>10</number>
    </property>
    <property name="singleStep">
     <number>1</number>
    </property>
    <property name="pageStep">
     <number>1</number>
    </property>
    <property name="value">
     <number>3</number>
    </property>
    <property name="sliderPosition">
     <number>3</number>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
    <property name="invertedAppearance">
     <bool>false</bool>
    </property>
    <property name="invertedControls">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QWidget" name="widget_4" native="true">
    <property name="geometry">
     <rect>
      <x>50</x>
      <y>620</y>
      <width>431</width>
      <height>51</height>
     </rect>
    </property>
    <widget class="QRadioButton" name="options_2_ext_type_rad">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>10</y>
       <width>377</width>
       <height>31</height>
      </rect>
     </property>
     <property name="layoutDirection">
      <enum>Qt::RightToLeft</enum>
     </property>
     <property name="autoFillBackground">
      <bool>false</bool>
     </property>
     <property name="styleSheet">
      <string notr="true">	QRadioButton {
       color:rgba(255, 255, 255, 230);
		font-size: 20px;
		spacing: 160px;
    }    
	QRadioButton::indicator {
        width: 17px; /* Set width of the indicator */
        height: 17px; /* Set height of the indicator */
    }

    QRadioButton::indicator::unchecked {
        border: 2px solid #999999; /* Set border for the unchecked state */
        border-radius: 10px; /* Set border radius to make it rounded */
    }

    QRadioButton::indicator::checked {
        background: #0063F9; /* Set background color for the checked state */
        border: 2px solid #32CC99; /* Set border for the checked state */
        border-radius: 10px; /* Set border radius to make it rounded */
    }</string>
     </property>
     <property name="text">
      <string>Export type: .obj</string>
     </property>
    </widget>
   </widget>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
